
#ifndef __FIXEDFONTUBUNTURTTF8
#define __FIXEDFONTUBUNTURTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x04, 0x01, 0x40, 0x28, 0x08, 0x81, 0x10, 0x41, 0x08, 0x21, 0xFC,
  0x40, 0x48, 0x0A, 0x00, 0x80, 0xF8, 0x84, 0x82, 0x82, 0x84, 0xFC, 0x82,
  0x81, 0x81, 0x82, 0xFC, 0x1F, 0x10, 0x50, 0x10, 0x08, 0x04, 0x02, 0x01,
  0x00, 0x40, 0x10, 0x47, 0xC0, 0xFC, 0x41, 0x20, 0x50, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x81, 0x41, 0x3F, 0x00, 0xFF, 0x02, 0x04, 0x08, 0x1F, 0xA0,
  0x40, 0x81, 0x03, 0xF8, 0xFF, 0x02, 0x04, 0x08, 0x1F, 0xA0, 0x40, 0x81,
  0x02, 0x00, 0x1F, 0x10, 0x50, 0x10, 0x08, 0x04, 0x02, 0x03, 0x01, 0x40,
  0x90, 0x47, 0xE0, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0F, 0xFE, 0x03, 0x01,
  0x80, 0xC0, 0x60, 0x20, 0xFF, 0xE0, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40,
  0x81, 0x03, 0x09, 0xE0, 0x81, 0x41, 0x23, 0x12, 0x0A, 0x06, 0x02, 0xC1,
  0x10, 0x86, 0x40, 0xA0, 0x20, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40,
  0x81, 0x03, 0xF8, 0x40, 0x4C, 0x19, 0x83, 0x28, 0xA5, 0x14, 0x94, 0xA2,
  0x8C, 0x51, 0x84, 0x30, 0x06, 0x00, 0x80, 0x80, 0xE0, 0x68, 0x32, 0x19,
  0x0C, 0x46, 0x13, 0x05, 0x82, 0xC0, 0xE0, 0x20, 0x1E, 0x08, 0x44, 0x0A,
  0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x40, 0x88, 0x41, 0xE0, 0xFC, 0x82,
  0x81, 0x81, 0x81, 0x82, 0xFC, 0x80, 0x80, 0x80, 0x80, 0x1E, 0x08, 0x44,
  0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x40, 0x88, 0x41, 0xE0, 0x10,
  0x02, 0x00, 0x60, 0xFC, 0x41, 0x20, 0x50, 0x28, 0x14, 0x13, 0xF1, 0x08,
  0x82, 0x40, 0xA0, 0x20, 0x3C, 0x86, 0x04, 0x06, 0x03, 0x01, 0x01, 0x03,
  0x09, 0xE0, 0xFF, 0x84, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08,
  0x04, 0x02, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01,
  0x80, 0xA0, 0x8F, 0x80, 0x80, 0xC0, 0x50, 0x48, 0x24, 0x11, 0x10, 0x88,
  0x28, 0x14, 0x0A, 0x02, 0x00, 0x80, 0x0C, 0x10, 0x50, 0x84, 0x8A, 0x24,
  0x51, 0x22, 0x88, 0xA2, 0x85, 0x14, 0x28, 0xA0, 0x82, 0x04, 0x10, 0x80,
  0xA0, 0x88, 0x84, 0x41, 0x40, 0x40, 0x50, 0x44, 0x22, 0x20, 0xA0, 0x20,
  0x80, 0xA0, 0x90, 0x44, 0x42, 0x20, 0xA0, 0x20, 0x10, 0x08, 0x04, 0x02,
  0x00, 0xFE, 0x04, 0x10, 0x41, 0x02, 0x08, 0x20, 0x41, 0x03, 0xF8, 0x78,
  0x10, 0x5F, 0x86, 0x18, 0x5F, 0x81, 0x02, 0x04, 0x0F, 0x90, 0xA0, 0xC1,
  0x83, 0x06, 0x17, 0xC0, 0x3D, 0x08, 0x20, 0x82, 0x04, 0x0F, 0x02, 0x04,
  0x08, 0x13, 0xE8, 0x60, 0xC1, 0x83, 0x05, 0x09, 0xF0, 0x38, 0x8A, 0x0F,
  0xF8, 0x10, 0x10, 0x1E, 0x7C, 0x21, 0x0F, 0xC2, 0x10, 0x84, 0x21, 0x00,
  0x3E, 0x86, 0x0C, 0x18, 0x30, 0x50, 0x9F, 0x02, 0x0B, 0xE0, 0x81, 0x02,
  0x04, 0x0F, 0x90, 0xA0, 0xC1, 0x83, 0x06, 0x0C, 0x10, 0xCF, 0xF0, 0x24,
  0x02, 0x49, 0x24, 0x92, 0x70, 0x82, 0x08, 0x20, 0x8A, 0x4A, 0x30, 0xA2,
  0x48, 0xA1, 0x92, 0x49, 0x24, 0x92, 0x30, 0xF3, 0x91, 0x8A, 0x10, 0xC2,
  0x18, 0x43, 0x08, 0x61, 0x0C, 0x21, 0xF9, 0x0A, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0xF9, 0x0A, 0x0C,
  0x18, 0x30, 0x61, 0x7C, 0x81, 0x02, 0x00, 0x3E, 0x86, 0x0C, 0x18, 0x30,
  0x50, 0x9F, 0x02, 0x04, 0x08, 0xFC, 0x21, 0x08, 0x42, 0x10, 0x7C, 0x20,
  0xC1, 0x04, 0x3E, 0x88, 0x8F, 0x88, 0x88, 0x88, 0x70, 0x83, 0x06, 0x0C,
  0x18, 0x30, 0x50, 0x9E, 0x83, 0x05, 0x12, 0x24, 0x45, 0x0A, 0x08, 0x82,
  0x0C, 0x10, 0x51, 0x44, 0x8A, 0x24, 0x51, 0x14, 0x50, 0xA2, 0x82, 0x08,
  0x81, 0x42, 0x24, 0x18, 0x18, 0x24, 0x42, 0x81, 0x82, 0x89, 0x12, 0x22,
  0x85, 0x04, 0x08, 0x10, 0x43, 0x00, 0xFC, 0x10, 0x84, 0x21, 0x08, 0x3F,
  0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x82, 0x88, 0xE0, 0x13, 0x59,
  0x11, 0x11, 0x11, 0x10, 0x38, 0x8A, 0x08, 0x10, 0x41, 0x04, 0x10, 0x41,
  0x03, 0xF8, 0x79, 0x08, 0x08, 0x10, 0x47, 0x01, 0x01, 0x03, 0x09, 0xE0,
  0x04, 0x18, 0x51, 0x22, 0x48, 0xA1, 0x7F, 0x04, 0x08, 0x10, 0x7E, 0x81,
  0x02, 0x07, 0x80, 0x80, 0x81, 0x03, 0x09, 0xE0, 0x1C, 0x41, 0x04, 0x0F,
  0x90, 0xA0, 0xC1, 0x82, 0x88, 0xE0, 0xFE, 0x04, 0x10, 0x40, 0x82, 0x04,
  0x08, 0x20, 0x40, 0x80, 0x38, 0x8A, 0x0C, 0x14, 0x47, 0x11, 0x41, 0x82,
  0x88, 0xE0, 0x38, 0x8A, 0x0C, 0x18, 0x28, 0x4F, 0x81, 0x04, 0x11, 0xC0,
  0xF0, 0x70, 0x48, 0x88, 0x89, 0x08, 0x90, 0x8A, 0x07, 0x4E, 0x05, 0x10,
  0x91, 0x09, 0x11, 0x11, 0x20, 0xE0, 0xC0, 0x55, 0x80, 0xFE, 0x60, 0xC3,
  0xF2, 0x49, 0x24, 0x92, 0x49, 0x27, 0xE4, 0x92, 0x49, 0x24, 0x92, 0x4F,
  0x12, 0x44, 0x48, 0x88, 0x88, 0x84, 0x44, 0x21, 0x84, 0x22, 0x21, 0x11,
  0x11, 0x12, 0x22, 0x48, 0x02, 0x08, 0x10, 0x20, 0x81, 0x02, 0x08, 0x10,
  0x40, 0x81, 0x04, 0x08, 0x10, 0x40 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   4,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  11,  11,    0,  -10 },   // 0x01 'A' 
  {66,    17,   8,  11,  10,    1,  -10 },   // 0x02 'B' 
  {67,    28,   9,  11,  11,    1,  -10 },   // 0x03 'C' 
  {68,    41,   9,  11,  11,    1,  -10 },   // 0x04 'D' 
  {69,    54,   7,  11,   9,    1,  -10 },   // 0x05 'E' 
  {70,    64,   7,  11,   9,    1,  -10 },   // 0x06 'F' 
  {71,    74,   9,  11,  11,    1,  -10 },   // 0x07 'G' 
  {72,    87,   9,  11,  11,    1,  -10 },   // 0x08 'H' 
  {73,   100,   1,  11,   3,    1,  -10 },   // 0x09 'I' 
  {74,   102,   7,  11,   8,    0,  -10 },   // 0x0A 'J' 
  {75,   112,   9,  11,  10,    1,  -10 },   // 0x0B 'K' 
  {76,   125,   7,  11,   8,    1,  -10 },   // 0x0C 'L' 
  {77,   135,  11,  11,  13,    1,  -10 },   // 0x0D 'M' 
  {78,   151,   9,  11,  11,    1,  -10 },   // 0x0E 'N' 
  {79,   164,  10,  11,  12,    1,  -10 },   // 0x0F 'O' 
  {80,   178,   8,  11,  10,    1,  -10 },   // 0x10 'P' 
  {81,   189,  10,  14,  12,    1,  -10 },   // 0x11 'Q' 
  {82,   207,   9,  11,  10,    1,  -10 },   // 0x12 'R' 
  {83,   220,   7,  11,   9,    1,  -10 },   // 0x13 'S' 
  {84,   230,   9,  11,   9,    0,  -10 },   // 0x14 'T' 
  {85,   243,   9,  11,  11,    1,  -10 },   // 0x15 'U' 
  {86,   256,   9,  11,   9,    0,  -10 },   // 0x16 'V' 
  {87,   269,  13,  11,  13,    0,  -10 },   // 0x17 'W' 
  {88,   287,   9,  11,   9,    0,  -10 },   // 0x18 'X' 
  {89,   300,   9,  11,   9,    0,  -10 },   // 0x19 'Y' 
  {90,   313,   7,  11,   9,    1,  -10 },   // 0x1A 'Z' 
  {97,   323,   6,   8,   8,    1,   -7 },   // 0x1B 'a' 
  {98,   329,   7,  12,   9,    1,  -11 },   // 0x1C 'b' 
  {99,   340,   6,   8,   8,    1,   -7 },   // 0x1D 'c' 
  {100,   346,   7,  12,   9,    1,  -11 },   // 0x1E 'd' 
  {101,   357,   7,   8,   9,    1,   -7 },   // 0x1F 'e' 
  {102,   364,   5,  12,   6,    1,  -11 },   // 0x20 'f' 
  {103,   372,   7,  11,   9,    1,   -7 },   // 0x21 'g' 
  {104,   382,   7,  12,   9,    1,  -11 },   // 0x22 'h' 
  {105,   393,   1,  12,   3,    1,  -11 },   // 0x23 'i' 
  {106,   395,   3,  15,   3,   -1,  -11 },   // 0x24 'j' 
  {107,   401,   6,  12,   8,    1,  -11 },   // 0x25 'k' 
  {108,   410,   3,  12,   4,    1,  -11 },   // 0x26 'l' 
  {109,   415,  11,   8,  13,    1,   -7 },   // 0x27 'm' 
  {110,   426,   7,   8,   9,    1,   -7 },   // 0x28 'n' 
  {111,   433,   8,   8,  10,    1,   -7 },   // 0x29 'o' 
  {112,   441,   7,  11,   9,    1,   -7 },   // 0x2A 'p' 
  {113,   451,   7,  11,   9,    1,   -7 },   // 0x2B 'q' 
  {114,   461,   5,   8,   6,    1,   -7 },   // 0x2C 'r' 
  {115,   466,   5,   8,   7,    1,   -7 },   // 0x2D 's' 
  {116,   471,   4,  11,   6,    1,  -10 },   // 0x2E 't' 
  {117,   477,   7,   8,   9,    1,   -7 },   // 0x2F 'u' 
  {118,   484,   7,   8,   7,    0,   -7 },   // 0x30 'v' 
  {119,   491,  13,   8,  13,    0,   -7 },   // 0x31 'w' 
  {120,   504,   8,   8,   8,    0,   -7 },   // 0x32 'x' 
  {121,   512,   7,  11,   7,    0,   -7 },   // 0x33 'y' 
  {122,   522,   6,   8,   8,    1,   -7 },   // 0x34 'z' 
  {48,   528,   7,  11,   9,    1,  -10 },   // 0x35 '0' 
  {49,   538,   4,  11,   9,    1,  -10 },   // 0x36 '1' 
  {50,   544,   7,  11,   9,    1,  -10 },   // 0x37 '2' 
  {51,   554,   7,  11,   9,    1,  -10 },   // 0x38 '3' 
  {52,   564,   7,  11,   9,    1,  -10 },   // 0x39 '4' 
  {53,   574,   7,  11,   9,    1,  -10 },   // 0x3A '5' 
  {54,   584,   7,  11,   9,    1,  -10 },   // 0x3B '6' 
  {55,   594,   7,  11,   9,    1,  -10 },   // 0x3C '7' 
  {56,   604,   7,  11,   9,    1,  -10 },   // 0x3D '8' 
  {57,   614,   7,  11,   9,    1,  -10 },   // 0x3E '9' 
  {45,   624,   4,   1,   6,    1,   -4 },   // 0x3F '-' 
  {37,   625,  12,  11,  14,    1,  -10 },   // 0x40 '%' 
  {46,   642,   1,   2,   4,    1,   -1 },   // 0x41 '.' 
  {44,   643,   2,   5,   4,    0,   -1 },   // 0x42 ',' 
  {33,   645,   1,  11,   4,    1,  -10 },   // 0x43 '!' 
  {58,   647,   1,   8,   4,    1,   -7 },   // 0x44 ':' 
  {91,   648,   3,  16,   5,    2,  -12 },   // 0x45 '[' 
  {93,   654,   3,  16,   5,    0,  -12 },   // 0x46 ']' 
  {40,   660,   4,  16,   5,    1,  -12 },   // 0x47 '(' 
  {41,   668,   4,  16,   5,    0,  -12 },   // 0x48 ')' 
  {47,   676,   7,  16,   6,    0,  -12 }   // 0x49 '/' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  16,  // newline distance (y axis)
    -1,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    13,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1222 bytes -  but your mileage may vary.

#endif